I want your help to creating a public facing sql script. Here are the details:
- I have a private sql schema where I create tables, views and functions to help support a workflow domain.
- I want to create a public sql schema that acts as a facade so a) that others can interact with the domain and b) so that I can control what changes the public sees.
- The private schema already exists. Below is an example of a typical function.
- I want you to help finishing this script (copy-private-functions-template.sh).
- The copy-private-functions-template.sh file has comments to guide you.
- Function name prefix changes from 'stack_' or 'stack_wf_' to 'api_' and 'api_wf_' respectively for the public functions.
- Some functions have inner functions defined that are indented; therefore, you only need to pay attention to lines that are not indented.
- You can ignore any function with 'trigger_func' in the name of the function.
- You can ignore any trigger defintions.
- Note that we need to keep the comment on the function.
- We need an empty line between function definitions.

Here is an example of a typical function.
``` sql
CREATE OR REPLACE FUNCTION stack_wf_request_get_notes(
    p_request_uu uuid,
    p_note_count integer
)
RETURNS text[] AS $$
DECLARE
    v_notes text[];
BEGIN
    select array_agg(concat_ws(' by: ', note, name)) into v_notes
    from (
        select n.note, concat_ws(' ', u.first_name, u.last_name) as name
        from stack_wf_request_note n
        join stack_user u on n.stack_user_uu = n.stack_user_uu
        where n.stack_wf_request_uu = p_request_uu
        order by n.created desc
        limit p_note_count
    ) t;
    return v_notes;

END;
$$ LANGUAGE plpgsql;
COMMENT ON FUNCTION stack_wf_request_get_notes(uuid,integer) is 'Function to list request last x notes';
```

Here is an example of the expected output from the above typical function.
```
CREATE FUNCTION api_wf_request_get_notes(p_request_uu uuid, p_note_count integer)
RETURNS text AS
$BODY$
BEGIN
  RETURN wf_private.stack_wf_request_get_notes(p_request_uu, p_note_count);
END;
$BODY$
LANGUAGE plpgsql
SECURITY DEFINER;
COMMENT ON FUNCTION api_wf_request_get_notes(uuid,integer) is 'Function to list request last x notes';
```
