# Assumptions
#   local user exists in psql/prest .ssh/authorized_keys (root)
#   psql already installed on test_host
#   postgrest already installed and configured as service (note that this script creates both the executable and conf - all that is left is the service)
#   replace passwords with gpg calls for security sensitive environments

TEST_HOST="10.178.252.176"
TEST_PSQL_HOST="-h $TEST_HOST"
TEST_HOST_USER="root"

TEST_HOST_PREST_CONFIG_PATH="/usr/local/bin"
TEST_HOST_PREST_CONFIG_NAME="stack-rest.conf"
TEST_HOST_PREST_VERSION="v12.2.0"
TEST_HOST_PREST_SERVICE="postgrest"
TEST_HOST_PREST_FILE="postgrest-$TEST_HOST_PREST_VERSION-linux-static-x64.tar.xz"
TEST_HOST_PREST_URL="https://github.com/PostgREST/postgrest/releases/download/$TEST_HOST_PREST_VERSION/$TEST_HOST_PREST_FILE"

# need to eventually remove idempiere and use postgres instead
TEST_DB_ADMIN="idempiere"
TEST_PSQL_DB_ADMIN="-d $TEST_DB_ADMIN"
TEST_USER_ADMIN="adempiere"
TEST_PSQL_USER_ADMIN="-U $TEST_USER_ADMIN"

TEST_DB="db_20240527_01"
TEST_PSQL_DB="-d $TEST_DB"
TEST_SCHEMA="private"
TEST_SCHEMA_API="api"
TEST_USER="user_20240527_01"
TEST_PSQL_USER="-U $TEST_USER"
TEST_USER_PASSWORD="Silly"

TEST_USER_PREST_ANON="postgrest_web_anon"
TEST_USER_PREST_AUTH="postgrest_auth"
TEST_USER_PREST_AUTH_PASSWORD="Silly"

TEST_PSQL_VAR_ONLY="-AXqt"
TEST_PSQL_ERR_STOP="-v ON_ERROR_STOP=on"

#example
#psql $TEST_HOST $TEST_PSQL_ERR_STOP $TEST_USER $TEST_DB
